
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&soft_off {
    hold-time-ms = <2000>; // Only turn off it the key is held for 2 seconds or longer.
    split-peripheral-off-on-press;
};

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <0>; \
  };

/ {

    combos {
    compatible = "zmk,combos";
        COMBO(ue, &kp LBKT, 19 15)
        COMBO(ae, &kp SQT, 25 15)
        COMBO(oe, &kp SEMI, 21 15)
        COMBO(esckey, &kp ESC, 2 3)
    }; //The first parameter is just an internal name, the second one the keypress we want to execute during the combo, and the last one is for the key positions.

    behaviors {

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };

        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <300>;
            label = "HOLD_TAP";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            label = "home_mod";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        htls: hold_tap_layer_switch {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced"; // or "tap-preferred" / "hold-preferred" depending on your use case
            tapping-term-ms = <200>; // Customize this value as needed
            label = "Hold-Tap Layer Switch";
            #binding-cells = <2>;
            bindings = <&mo>, <&tog>;
        };
        
        tdl1: tap_dance_layer1_switch {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <200>;
            label = "Tap-Dance Layer1 Switch";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&tog 1>;
        };
        tdl2: tap_dance_layer2_switch {
            compatible = "zmk,behavior-tap-dance";
            tapping-term-ms = <200>;
            label = "Tap-Dance Layer2 Switch";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&tog 2>;
        };

    };


    keymap {
        compatible = "zmk,keymap";

DEF {
    display-name = "Base";
    bindings = <
&kp ESC     &kp N1 &kp N2       &kp N3          &kp N4      &kp N5                                &kp N6   &kp N7           &kp N8          &kp N9         &kp N0          &kp BSPC
&kp TAB     &kp Q  &kp W        &kp E           &kp R       &kp T                                 &kp Y    &kp U            &kp I           &kp O          &kp P          &kp DEL
&kp NUBS    &kp A  &hm LALT S   &hm LSHFT D     &hm LCTRL F &kp G                                 &kp H    &hm RCTRL J      &hm RSHFT K     &hm RALT L     &hm RGUI RBKT   &kp BSLH
&td0        &kp Z  &kp X        &kp C           &kp V       &kp B  &kp EQUAL          &kp MINUS   &kp N  &kp M           &kp COMMA       &kp DOT        &kp FSLH       &kp RSHFT
                             &kp LCTRL   &ht LALT SPACE  &tdl1  &kp RET               &kp SPACE  &tdl2   &ht RALT RET &kp RGUI
            >;
        };

NAV {
    display-name = "Navi";
    bindings = <
&trans &kp F1       &kp F2     &kp F3    &kp F4   &kp F5                                         &kp F6         &kp F7      &kp F8     &kp F9    &kp F10    &trans
&trans &kp F11      &kp F12    &kp N8    &kp N9    &kp KP_ASTERISK                               &kp PG_UP      &kp HOME    &kp UP     &kp END     &trans   &trans 
&trans &kp KP_SLASH &kp N4      &kp N5    &kp N6   &kp KP_MINUS                                  &kp PG_DN      &kp LEFT    &kp DOWN   &kp RIGHT   &kp RPAR  &trans
&trans &kp N0       &kp N1      &kp N2    &kp N3   &kp KP_PLUS   &trans                 &trans    &trans    &trans  &trans      &trans    &trans        &trans    
                                 &trans     &trans     &trans     &trans                &trans    &trans    &trans   &soft_off 
            >;
        };

SYM {
    display-name = "NumSym";
    bindings = <
&trans   &kp EXCLAMATION     &kp AT_SIGN      &kp HASH    &kp DOLLAR    &kp PERCENT                             &kp CARET     &kp AMPERSAND         &kp ASTERISK      &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS     &trans
&trans    &kp N1        &kp N2          &kp N3          &kp N4      &kp N5                                      &kp N6          &kp N7     &kp N8     &kp N9    &kp N0             &trans
&trans    &kp N1        &kp N2          &kp N3          &kp N4      &kp N5                                      &kp N6          &kp N7     &kp N8     &kp N9    &kp N0             &trans
&trans    &trans        &trans          &trans          &trans      &trans       &trans             &trans      &kp N0          &kp N1     &kp N2     &kp N3    &kp KP_PLUS        &trans
                                                        &trans  &trans  &trans    &trans            &trans    &trans      &trans    &trans
            >;
        };

ADJ {
    display-name = "System";
    bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &kp F6  &kp F7      &kp F8  &kp F9  &kp F10         &trans
&trans  &kp F11       &kp F12       &trans        &trans      &studio_unlock    &trans  &trans      &trans  &trans  &trans          &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL    &trans  &trans      &trans  &trans  &bootloader     &trans
                                    &trans        &trans      &trans            &trans  &trans      &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

};
